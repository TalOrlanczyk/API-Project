{"version":3,"sources":["Components/Header/Title/Title.js","Components/Header/Logo/Logo.js","Components/Header/FunctionsBar/ThemeFunc/ThemeFunc.js","Components/Header/FunctionsBar/FunctionsBar.js","Components/Header/Header.js","Components/Converter/CurrencyRow/CurrencyRow.js","Components/Converter/CoverterAmount/CoverterAmount.js","Components/Converter/CoverterTable/CoverterTable.js","Components/Converter/Converter.js","Components/MainPage/CovertLink/CovertLink.js","Components/MainPage/PokimonLink/PokimonLink.js","Components/MainPage/MainPage.js","Components/NotFound/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Title","className","Logo","to","ThemeFunc","useState","theme","setTheme","useEffect","ca","document","cookie","split","element","getElementById","classList","add","onClick","e","date","Date","setDate","getDate","expires","toUTCString","remove","darktheme","lightmode","FunctionsBar","console","log","Header","CurrencyRow","props","ref","open","setOpen","pickedCoin","wrapperRef","useRef","handleClickOutside","event","current","contains","target","addEventListener","removeEventListener","currencyOptions","selectedCurrency","onChangeCurrency","onChangeAmount","amount","compereCurreny","id","type","name","value","filter","currency","map","option","key","onChange","BASE_URL","CoverterAmount","toAmount","fromAmount","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","handleFromAmountChange","useCallback","handleToAmountChange","CoverterTable","latestRate","setLatestRate","yesterdayRate","setYesterdayRate","coinLength","setCoinLength","latestDate","DateOfYesterday","allCoins","length","options","a","response","bases","tempRate","entries","month","DateBeforeLates","getFullYear","getMonth","dailyChange","howFarFromhundred","noneDecimel","toString","onlythreedecimel","substring","classDailyChange","latest","Math","abs","Converter","CovertLink","PokimonLink","MainPage","NotFound","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f0268f87.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Title.css';\r\n\r\nconst Title = () => {\r\n    return (\r\n        <div className=\"Title\">\r\n            <span className=\"Span-color\">our project :)</span>\r\n        </div>\r\n    )\r\n}\r\nexport default Title;","import React from 'react';\r\nimport './Logo.css';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Logo = () => {\r\n    \r\n    return (\r\n        <div className=\"Logo\">\r\n            <Link to=\"/\">\r\n                header\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\nexport default Logo;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './ThemeFunc.css';\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\r\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\r\n\r\nconst ThemeFunc = () => {\r\n    const [theme, setTheme] = useState(\"\");\r\n    useEffect(()=> {\r\n        var ca = document.cookie.split(';');\r\n        ca = ca[0].split('=');\r\n        const element = document.getElementById(\"API\");\r\n        if (ca[0] === \"theme\") {\r\n\r\n            element.classList.add(ca[1]);\r\n            setTheme(ca[1])\r\n        } else {\r\n            element.classList.add(\"lightmode\");\r\n            setTheme(\"lightmode\")\r\n        }\r\n\r\n      },[])\r\n    const darktheme = (e) => {\r\n        let date = new Date();\r\n        date.setDate(date.getDate() + 1);\r\n        let expires = \"; expires=\" + date.toUTCString();\r\n        document.cookie = \"theme=darkmode\" + expires + \";\";\r\n        const element = document.getElementById(\"API\");\r\n        element.classList.add(\"darkmode\");\r\n        element.classList.remove(\"lightmode\");\r\n        setTheme(\"darkmode\");\r\n    }\r\n    const lightmode = (e) => {\r\n        const element = document.getElementById(\"API\");\r\n        let date = new Date();\r\n        date.setDate(date.getDate() + 1);\r\n        let expires = \"; expires=\" + date.toUTCString();\r\n        document.cookie = \"theme=lightmode\" + expires + \";\";\r\n        element.classList.add(\"lightmode\");\r\n        element.classList.remove(\"darkmode\");\r\n        setTheme(\"lightmode\");\r\n    }\r\n    return (\r\n        <div className=\"ThemeFunc-flex\">\r\n            {theme === \"lightmode\" ?\r\n                <button className=\"fab-class\" onClick={(e) => darktheme(e)}>\r\n                    <span className=\"middle\">\r\n                        < Brightness4Icon className=\"ThemeFunc-icon\" />\r\n                    </span>\r\n                </button>\r\n                :\r\n                <button className=\"fab-class\" onClick={(e) => lightmode(e)}>\r\n                    <span className=\"middle\">\r\n                        < Brightness7Icon className=\"ThemeFunc-icon\" />\r\n                    </span>\r\n                </button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default ThemeFunc;","import React from 'react';\r\nimport './FunctionsBar.css';\r\nimport ThemeFunc from './ThemeFunc/ThemeFunc';\r\n\r\n\r\nconst FunctionsBar = () => {\r\n    console.log(\"func\")\r\n    return (\r\n        <div className=\"funcBar-grid\">\r\n            <ThemeFunc/>\r\n        </div>\r\n    )\r\n}\r\nexport default FunctionsBar;","import React from 'react';\r\nimport './Header.css'\r\nimport Title from './Title/Title.js';\r\nimport Logo from './Logo/Logo';\r\nimport FunctionsBar from './FunctionsBar/FunctionsBar';\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"Header-grid\">  \r\n            <Logo/>\r\n            <Title/>\r\n            <FunctionsBar/>\r\n        </div>\r\n    )\r\n}\r\nexport default Header;","import React, { useState, useRef, useEffect } from 'react';\r\nimport './CurrencyRow.css';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\n\r\nconst CurrencyRow = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [pickedCoin] = useState(\"\");\r\n    const wrapperRef = useRef(null);\r\n    const useOutsideAlerter = (ref) => {\r\n        useEffect(() => {\r\n            function handleClickOutside(event) {\r\n                if (ref.current && !ref.current.contains(event.target)) {\r\n                    if (open === true)\r\n                        setOpen(false)\r\n                }\r\n            }\r\n\r\n            // Bind the event listener\r\n            document.addEventListener(\"mousedown\", handleClickOutside);\r\n            return () => {\r\n                // Unbind the event listener on clean up\r\n                document.removeEventListener(\"mousedown\", handleClickOutside);\r\n            };\r\n        }, [ref]);\r\n    }\r\n    useOutsideAlerter(wrapperRef);\r\n    const {\r\n        currencyOptions,\r\n        selectedCurrency,\r\n        onChangeCurrency,\r\n        onChangeAmount,\r\n        amount,\r\n        compereCurreny\r\n    } = props\r\n\r\n    return (\r\n        <div className=\"Currecy\">\r\n            <div className={open === true ? \"color-picker open\" : \"color-picker\"} onClick={(e) => { setOpen(!open) }} >\r\n                <input id=\"color-input\" type=\"hidden\" name=\"coloris_panneau\" value={pickedCoin} />\r\n                <div className=\"color-value list-item\">{selectedCurrency}<ArrowDownwardIcon className={open === true ? \"arrowdown upside\" : \"arrowdown\"} /></div>\r\n                <ul className=\"list\" ref={open === true ? wrapperRef : null} >\r\n\r\n                    {currencyOptions\r\n                        .filter(currency => currency !== compereCurreny)\r\n                        .map((option) => \r\n                           \r\n                                    <li key={option} className={selectedCurrency === option ? \"list-item picked\" : \"list-item\"} onClick={(e) => onChangeCurrency(option)}>\r\n                                        <span>{option}</span>\r\n                                    </li>\r\n                                \r\n                        )\r\n                    }\r\n                </ul>\r\n            </div>\r\n            <input type=\"number\" className=\"money-conver\" value={amount} onChange={onChangeAmount} />\r\n        </div>\r\n    )\r\n}\r\nexport default CurrencyRow;","import React, { useState, useEffect, useCallback } from 'react';\r\nimport './CoverterAmount.css';\r\nimport CurrencyRow from '../CurrencyRow/CurrencyRow';\r\nconst BASE_URL = 'https://api.exchangeratesapi.io/latest';\r\nconst CoverterAmount = () => {\r\n    const [currencyOptions, setCurrencyOptions] = useState([])\r\n    const [fromCurrency, setFromCurrency] = useState()\r\n    const [toCurrency, setToCurrency] = useState()\r\n    const [exchangeRate, setExchangeRate] = useState()\r\n    const [amount, setAmount] = useState(1)\r\n    const [amountInFromCurrency, setAmountInFromCurrency] = useState(true)\r\n\r\n    let toAmount, fromAmount\r\n    if (amountInFromCurrency) {\r\n        fromAmount = amount\r\n        toAmount = amount * exchangeRate\r\n    } else {\r\n        toAmount = amount\r\n        fromAmount = amount / exchangeRate\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(BASE_URL)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                const firstCurrency = Object.keys(data.rates)[0]\r\n                setCurrencyOptions([data.base, ...Object.keys(data.rates)])\r\n                setFromCurrency(data.base)\r\n                setToCurrency(firstCurrency)\r\n                setExchangeRate(data.rates[firstCurrency])\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (fromCurrency != null && toCurrency != null) {\r\n            fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\r\n                .then(res => res.json())\r\n                .then(data => setExchangeRate(data.rates[toCurrency]))\r\n        }\r\n    }, [fromCurrency, toCurrency])\r\n\r\n\r\n    const handleFromAmountChange = useCallback((e) => {\r\n        setAmount(e.target.value)\r\n        setAmountInFromCurrency(true)\r\n    },[])\r\n\r\n    const handleToAmountChange = useCallback((e) => {\r\n        setAmount(e.target.value)\r\n        setAmountInFromCurrency(false)\r\n    },[])\r\n    if ( fromCurrency == null || toCurrency == null || currencyOptions == null || fromAmount == null || exchangeRate == null)\r\n    return 'Loading....'\r\n    return ( \r\n            <div className=\"coverter-main\">\r\n                <CurrencyRow\r\n                    currencyOptions={currencyOptions}\r\n                    selectedCurrency={fromCurrency}\r\n                    onChangeCurrency={(e) => setFromCurrency(e)}\r\n                    onChangeAmount={(e) =>handleFromAmountChange(e)}\r\n                    amount={fromAmount}\r\n                    compereCurreny={toCurrency}\r\n                />\r\n                <div className=\"equals\">=</div>\r\n                <CurrencyRow\r\n                    currencyOptions={currencyOptions}\r\n                    selectedCurrency={toCurrency}\r\n                    onChangeCurrency={(e) => setToCurrency(e)}\r\n                    onChangeAmount={(e) =>handleToAmountChange(e)}\r\n                    amount={toAmount}\r\n                    compereCurreny={fromCurrency}\r\n                />\r\n            </div>\r\n    )\r\n}\r\nexport default CoverterAmount;","import React, { useEffect, useState } from 'react';\r\nimport './CoverterTable.css';\r\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\r\nconst BASE_URL = 'https://api.exchangeratesapi.io/';\r\nconst CoverterTable = () => {\r\n    const [latestRate, setLatestRate] = useState({});\r\n    const [yesterdayRate, setYesterdayRate] = useState({});\r\n    const [coinLength, setCoinLength] = useState(\"\");\r\n    \r\n    useEffect(() => {\r\n        fetch(`${BASE_URL}latest`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                let latestDate = data.date\r\n                let DateOfYesterday = new Date(latestDate);\r\n                const calcMonth = (month) => {\r\n                    if (month >= 10) return month\r\n                    return \"0\" + month\r\n                }\r\n                const allCoins = data.rates;\r\n                allCoins[data.base] = \"\"\r\n                setCoinLength(Object.keys(allCoins).length)\r\n                Object.keys(allCoins).map(async (options) => {\r\n                    await fetch(`${BASE_URL}latest?symbols=ILS&base=${options}`)\r\n                        .then(response => response.json())\r\n                        .then(data => {\r\n                            const bases = data.base;\r\n                            const tempRate = latestRate;\r\n                            tempRate[bases] = Object.entries(data.rates)[0][1]\r\n                            setLatestRate({ ...latestRate, ...tempRate[bases] })\r\n                        })\r\n                })\r\n                const DateBeforeLates = DateOfYesterday.getFullYear() + \"-\" + calcMonth(DateOfYesterday.getMonth()) + \"-\" + (DateOfYesterday.getDate() - 1);\r\n                Object.keys(allCoins).map(async (options) => {\r\n                    await fetch(`${BASE_URL}${DateBeforeLates}?symbols=ILS&base=${options}`)\r\n                        .then(response => response.json())\r\n                        .then(data => {\r\n                            const bases = data.base;\r\n                            const tempRate = yesterdayRate;\r\n                            tempRate[bases] = Object.entries(data.rates)[0][1]\r\n                            setYesterdayRate({ ...yesterdayRate, ...tempRate[bases] })\r\n                        })\r\n                })\r\n            })\r\n\r\n    }, [])\r\n    \r\n    const dailyChange = (option) => {\r\n        let precentege = (option[1] / yesterdayRate[option[0]]) * 100;\r\n        let howFarFromhundred = 100 - precentege;\r\n        let noneDecimel = howFarFromhundred.toString().split(\".\")[0];\r\n        let onlythreedecimel = howFarFromhundred.toString().split(\".\")[1];\r\n        onlythreedecimel = onlythreedecimel.substring(0, 3);\r\n        if (onlythreedecimel.length === 2)\r\n            onlythreedecimel = onlythreedecimel + \"0\";\r\n        else if (onlythreedecimel.length === 1)\r\n            onlythreedecimel = onlythreedecimel + \"00\";\r\n\r\n        return noneDecimel + \".\" + onlythreedecimel;\r\n    }\r\n    const classDailyChange = (option) => {\r\n        if (option > 0) return \"positive\";\r\n        else if (option < 0) return  \"negative\";\r\n        else  return \"same\" ;\r\n    }\r\n    if (coinLength !== Object.keys(yesterdayRate).length || Object.keys(latestRate).length !== coinLength || Object.keys(latestRate).length !== Object.keys(yesterdayRate).length)\r\n        return 'Loading...'\r\n    return (\r\n        <div className=\"dd\">\r\n            <table className=\"tableCovertor\">\r\n                <thead className=\"tableHeader\">\r\n                    <tr>\r\n                        <td>\r\n                            type\r\n                        </td>\r\n                        <td>\r\n                            rate\r\n                        </td>\r\n                        <td>\r\n                            daily change\r\n                        </td>\r\n                        <td>\r\n                            graph\r\n                        </td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"tableBody\">\r\n                    {Object.entries(latestRate)\r\n                        .filter(latest => latest[0] !== \"ILS\")\r\n                        .map((option) => \r\n\r\n                            \r\n                                \r\n                                    <tr key={option[0]}>\r\n                                        <td>{option[0]}</td>\r\n                                        <td>{option[1]}</td>\r\n                                        <td className={classDailyChange(dailyChange(option))}>{Math.abs(dailyChange(option)) + \"%\"}</td>\r\n                                        <td><TrendingUpIcon /></td>\r\n                                    </tr>\r\n                                \r\n                        )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\nexport default CoverterTable;","import React from 'react';\r\nimport './Converter.css';\r\nimport CoverterAmount from './CoverterAmount/CoverterAmount';\r\nimport CoverterTable from './CoverterTable/CoverterTable';\r\nconst Converter = () => {\r\n    return (\r\n        <div className=\"converter-warrper\">\r\n\r\n            <div className=\"title\">\r\n                <h1 className=\"Converter-Header\">Convert</h1>\r\n            </div>\r\n            <CoverterAmount/>\r\n            <CoverterTable/>\r\n        </div>\r\n    )\r\n}\r\nexport default Converter","import React from 'react';\r\nimport './CovertLink.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CovertLink = () => {\r\n    return (\r\n        <div className=\"convertor\">\r\n            <div className=\"coin-flip\">\r\n                <div className=\"coin-flip-inner\">\r\n                    <div className=\"front-coin\"></div>\r\n                    <div className=\"back-coin\"></div>\r\n                </div>\r\n            </div>\r\n            <div className=\"converter-link-padd\">\r\n                <Link to=\"/Converter\" className=\"converter-link\">\r\n                    Convertor\r\n                </Link>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default CovertLink;","import React from 'react';\r\nimport './PokimonLink.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PokimonLink = () => {\r\n    return (\r\n        <div className=\"poxedex\">\r\n                <div className=\"pokeball\">\r\n                    <div className=\"pokeball__button\"></div>\r\n                </div>\r\n\r\n            <div className=\"converter-link-padd\">\r\n                <Link to=\"/Converter\" className=\"poxedex-link\">\r\n\r\n                    Poxedec\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default PokimonLink;","import React from 'react';\r\nimport './MainPage.css';\r\nimport CovertLink from './CovertLink/CovertLink';\r\nimport PokimonLink from './PokimonLink/PokimonLink';\r\n\r\nconst MainPage = () => {\r\n    return (\r\n        <div className=\"MainPage\">\r\n            <CovertLink/>\r\n            <CovertLink/>\r\n            <CovertLink/>\r\n            <PokimonLink/>\r\n            <CovertLink/>\r\n        </div>\r\n    )\r\n}\r\nexport default MainPage;","import React from 'react';\r\nimport './NotFound.css'\r\nconst NotFound = () => {\r\n    return (\r\n        <div className=\"NotFound\">     \r\n              <div id=\"letter-object\" className=\"text-flicker-in-glow anim-object\" onClick={(e)=> console.log(\"d\")}>404</div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default NotFound;","import React from 'react';\nimport './App.css';\nimport Header from './Components/Header/Header';\nimport { Switch, Route } from 'react-router-dom';\nimport Converter from './Components/Converter/Converter';\nimport MainPage from './Components/MainPage/MainPage';\nimport NotFound from './Components/NotFound/NotFound';\n\nconst App = () => {\n  // useEffect(()=> {\n  //   const element = document.getElementById(\"API\");\n  //   element.classList.add(\"lightmode\");\n  // },[])\n  return (\n    <div className=\"app\">\n      <Header/>\n      {/* <Route render = {({ location }) => ( */}\n             <Switch >\n             {/* <Switch location = { location }> */}\n                <Route exact path = '/' component={MainPage} />\n                <Route exact path = '/Converter/' component={Converter} />\n                <Route component={NotFound}/>\n              </Switch>\n       {/* )} /> */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter >\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}