{"version":3,"sources":["Components/Header/Title/Title.js","Components/Header/Logo/Logo.js","Components/Header/FunctionsBar/ThemeFunc/ThemeFunc.js","Components/Header/FunctionsBar/FunctionsBar.js","Components/Header/Header.js","Utils/useOutsideClick/useOutsideClick.js","Components/Converter/CurrencyRow/CurrencyRow.js","Components/Loading/Loading.js","Components/Converter/CoverterAmount/CoverterAmount.js","Components/Converter/CoverterTable/CoinGraph/CoinGraph.js","Components/Converter/CoverterTable/CoverterTable.js","Components/Converter/Converter.js","Components/MainPage/CovertLink/CovertLink.js","Components/MainPage/PokimonLink/PokimonLink.js","Components/MainPage/MainPage.js","Components/NotFound/NotFound.js","Components/Header/NavigatorMobile/NavigatorMobile.js","App.js","serviceWorker.js","index.js"],"names":["Title","className","Logo","to","ThemeFunc","useState","theme","setTheme","useEffect","ca","document","cookie","split","element","getElementById","classList","add","onClick","e","date","Date","setDate","getDate","expires","toUTCString","remove","darktheme","lightmode","FunctionsBar","console","log","Header","useOutsideClick","ref","callback","handleClick","current","contains","target","addEventListener","removeEventListener","CurrencyRow","currencyOptions","selectedCurrency","onChangeCurrency","onChangeAmount","amount","compereCurreny","open","setOpen","pickedCoin","wrapperRef","useRef","id","type","name","value","filter","currency","map","option","key","onChange","Loading","BASE_URL","CoverterAmount","toAmount","fromAmount","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","handleFromAmountChange","useCallback","handleToAmountChange","CoinGraph","openGraph","pickData","closeGraph","close","setClose","scrollIntoView","behavior","setTimeout","dateBorderClasses","classes","underline","input","endAdornment","InputAdornment","position","dateLabelClass","root","initialObject","CoverterTable","latestRate","setLatestRate","yesterdayRate","setYesterdayRate","coinLength","setCoinLength","selectedDate","handleDateChange","setOpenGraph","setPickData","latestDate","DateOfYesterday","allCoins","length","options","a","response","bases","tempRate","entries","month","DateBeforeLates","getFullYear","getMonth","dailyChange","howFarFromhundred","noneDecimel","toString","onlythreedecimel","undefined","substring","classDailyChange","handleStuff","calcMonth","DatePicked","currecy","utils","DateFnsUtils","DatePicker","disableFuture","InputLabelProps","InputProps","label","views","format","disabled","latest","Math","abs","window","scrollTo","body","scrollHeight","PickDataToGraph","Converter","CovertLink","PokimonLink","MainPage","NotFound","NavigatorMobile","App","isMobile","setIsMobile","navigator","userAgent","match","exact","path","component","Boolean","location","hostname","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3f1e03fe.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Title.css';\r\n\r\nconst Title = () => {\r\n    return (\r\n        <div className=\"Title\">\r\n            <span className=\"Span-color\">myApiProject </span>\r\n        </div>\r\n    )\r\n}\r\nexport default Title;","import React from 'react';\r\nimport './Logo.css';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Logo = () => {\r\n    \r\n    return (\r\n        <div className=\"Logo\">\r\n            <Link to=\"/\">\r\n                header\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\nexport default Logo;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './ThemeFunc.css';\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\r\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\r\n\r\nconst ThemeFunc = () => {\r\n    const [theme, setTheme] = useState(\"\");\r\n    useEffect(()=> {\r\n        var ca = document.cookie.split(';');\r\n        ca = ca[0].split('=');\r\n        const element = document.getElementById(\"API\");\r\n        if (ca[0] === \"theme\") {\r\n\r\n            element.classList.add(ca[1]);\r\n            setTheme(ca[1])\r\n        } else {\r\n            element.classList.add(\"lightmode\");\r\n            setTheme(\"lightmode\")\r\n        }\r\n\r\n      },[])\r\n    const darktheme = (e) => {\r\n        let date = new Date();\r\n        date.setDate(date.getDate() + 1);\r\n        let expires = \"; expires=\" + date.toUTCString();\r\n        document.cookie = \"theme=darkmode\" + expires + \";\";\r\n        const element = document.getElementById(\"API\");\r\n        element.classList.add(\"darkmode\");\r\n        element.classList.remove(\"lightmode\");\r\n        setTheme(\"darkmode\");\r\n    }\r\n    const lightmode = (e) => {\r\n        const element = document.getElementById(\"API\");\r\n        let date = new Date();\r\n        date.setDate(date.getDate() + 1);\r\n        let expires = \"; expires=\" + date.toUTCString();\r\n        document.cookie = \"theme=lightmode\" + expires + \";\";\r\n        element.classList.add(\"lightmode\");\r\n        element.classList.remove(\"darkmode\");\r\n        setTheme(\"lightmode\");\r\n    }\r\n    return (\r\n        <div className=\"ThemeFunc-flex\">\r\n            {theme === \"lightmode\" ?\r\n                <button className=\"fab-class\" onClick={(e) => darktheme(e)}>\r\n                    <span className=\"middle\">\r\n                        < Brightness4Icon className=\"ThemeFunc-icon\" />\r\n                    </span>\r\n                </button>\r\n                :\r\n                <button className=\"fab-class\" onClick={(e) => lightmode(e)}>\r\n                    <span className=\"middle\">\r\n                        < Brightness7Icon className=\"ThemeFunc-icon\" />\r\n                    </span>\r\n                </button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default ThemeFunc;","import React from 'react';\r\nimport './FunctionsBar.css';\r\nimport ThemeFunc from './ThemeFunc/ThemeFunc';\r\n\r\n\r\nconst FunctionsBar = () => {\r\n    console.log(\"func\")\r\n    return (\r\n        <div className=\"funcBar-grid\">\r\n            <ThemeFunc/>\r\n        </div>\r\n    )\r\n}\r\nexport default FunctionsBar;","import React from 'react';\r\nimport './Header.css'\r\nimport Title from './Title/Title.js';\r\nimport Logo from './Logo/Logo';\r\nimport FunctionsBar from './FunctionsBar/FunctionsBar';\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"Header-grid\">  \r\n            <Logo/>\r\n            <Title/>\r\n            <FunctionsBar/>\r\n        </div>\r\n    )\r\n}\r\nexport default Header;","import { useEffect } from \"react\";\r\n\r\nconst useOutsideClick = (ref, callback) => {\r\n  const handleClick = e => {\r\n    if (ref.current && !ref.current.contains(e.target)) {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClick);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClick);\r\n    };\r\n  });\r\n};\r\n\r\nexport default useOutsideClick;","import 'date-fns';\r\nimport React, { useState, useRef } from 'react';\r\nimport './CurrencyRow.css';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport useOutsideClick from '../../../Utils/useOutsideClick/useOutsideClick';\r\n\r\nconst CurrencyRow = ({currencyOptions,selectedCurrency,onChangeCurrency,onChangeAmount,amount,compereCurreny}) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [pickedCoin] = useState(\"\");\r\n    const wrapperRef = useRef(null);\r\n\r\n    useOutsideClick(wrapperRef, () => {\r\n        if (open === true)\r\n            setOpen(false)\r\n    });\r\n    return (\r\n        <div className=\"Currecy\">\r\n            <div className={open === true ? \"color-picker open\" : \"color-picker\"} onClick={(e) => {\r\n                setOpen(!open)\r\n            }} >\r\n                <input id=\"color-input\" type=\"hidden\" name=\"coloris_panneau\" value={pickedCoin} />\r\n                <div className=\"color-value list-item\">{selectedCurrency}<ArrowDownwardIcon className={open === true ? \"arrowdown upside\" : \"arrowdown\"} /></div>\r\n                <ul className=\"list\" ref={open === true ? wrapperRef : null} >\r\n\r\n                    {currencyOptions\r\n                        .filter(currency => currency !== compereCurreny)\r\n                        .map((option) =>\r\n                            <li key={option} className={selectedCurrency === option ? \"list-item picked\" : \"list-item\"} onClick={(e) => onChangeCurrency(option)}>\r\n\r\n                                <span>{option}</span>\r\n                            </li>\r\n\r\n                        )\r\n                    }\r\n                </ul>\r\n            </div>\r\n            <input type=\"number\" className=\"money-conver\" value={amount} onChange={onChangeAmount} />\r\n        </div>\r\n    )\r\n}\r\nexport default CurrencyRow;","import React from 'react';\r\nimport './Loading.css';\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"circle\"></div>\r\n            <div className=\"circle\"></div>\r\n            <div className=\"circle\"></div>\r\n            <div className=\"shadow\"></div>\r\n            <div className=\"shadow\"></div>\r\n            <div className=\"shadow\"></div>\r\n            <span>Loading</span>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Loading;","import React, { useState, useEffect, useCallback } from 'react';\r\nimport './CoverterAmount.css';\r\nimport CurrencyRow from '../CurrencyRow/CurrencyRow';\r\nimport Loading from '../../Loading/Loading'\r\nconst BASE_URL = 'https://api.exchangeratesapi.io/latest';\r\nconst CoverterAmount = () => {\r\n    const [currencyOptions, setCurrencyOptions] = useState([])\r\n    const [fromCurrency, setFromCurrency] = useState()\r\n    const [toCurrency, setToCurrency] = useState()\r\n    const [exchangeRate, setExchangeRate] = useState()\r\n    const [amount, setAmount] = useState(1)\r\n    const [amountInFromCurrency, setAmountInFromCurrency] = useState(true)\r\n\r\n    let toAmount, fromAmount\r\n    if (amountInFromCurrency) {\r\n        fromAmount = amount\r\n        toAmount = amount * exchangeRate\r\n    } else {\r\n        toAmount = amount\r\n        fromAmount = amount / exchangeRate\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(BASE_URL)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                const firstCurrency = Object.keys(data.rates)[0]\r\n                setCurrencyOptions([data.base, ...Object.keys(data.rates)])\r\n                setFromCurrency(data.base)\r\n                setToCurrency(firstCurrency)\r\n                setExchangeRate(data.rates[firstCurrency])\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (fromCurrency != null && toCurrency != null) {\r\n            fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\r\n                .then(res => res.json())\r\n                .then(data => setExchangeRate(data.rates[toCurrency]))\r\n        }\r\n    }, [fromCurrency, toCurrency])\r\n\r\n\r\n    const handleFromAmountChange = useCallback((e) => {\r\n        setAmount(e.target.value)\r\n        setAmountInFromCurrency(true)\r\n    }, [])\r\n\r\n    const handleToAmountChange = useCallback((e) => {\r\n        setAmount(e.target.value)\r\n        setAmountInFromCurrency(false)\r\n    }, [])\r\n    if (fromCurrency == null || toCurrency == null || currencyOptions == null || fromAmount == null || exchangeRate == null)\r\n        return <Loading />\r\n    return (\r\n        <div className=\"coverter-main slide-in-bck-center\">\r\n            <CurrencyRow\r\n                currencyOptions={currencyOptions}\r\n                selectedCurrency={fromCurrency}\r\n                onChangeCurrency={(e) => setFromCurrency(e)}\r\n                onChangeAmount={(e) => handleFromAmountChange(e)}\r\n                amount={fromAmount}\r\n                compereCurreny={toCurrency}\r\n            />\r\n            <div className=\"equals\">=</div>\r\n            <CurrencyRow\r\n                currencyOptions={currencyOptions}\r\n                selectedCurrency={toCurrency}\r\n                onChangeCurrency={(e) => setToCurrency(e)}\r\n                onChangeAmount={(e) => handleToAmountChange(e)}\r\n                amount={toAmount}\r\n                compereCurreny={fromCurrency}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default CoverterAmount;","import React, { useEffect, useState } from 'react';\r\nimport Close from '@material-ui/icons/Close';\r\nimport './CoinGraph.css';\r\n\r\nconst CoinGraph = ({ openGraph, pickData, closeGraph }) => {\r\n    const [close,setClose ] = useState(false)\r\n    useEffect(() => {\r\n        var element = document.getElementById(\"test\");\r\n\r\n        element.scrollIntoView({ behavior: 'smooth' });\r\n    }, []);\r\n    const closeGraphCard = (e) => {\r\n        setClose(true);\r\n        setTimeout( () => {\r\n            closeGraph();\r\n        },1000)\r\n    }\r\n    return (\r\n\r\n        <div className=\"coinGraph-container\">\r\n            <div id=\"test\" className={close === false ? \"scale-in-center\" : \"roll-out-left\"}>{pickData}\r\n                <button className=\"left-exit\" onClick={(e)=>closeGraphCard(e)}>\r\n                    <Close/>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default CoinGraph","import React, { useEffect, useState } from 'react';\r\nimport './CoverterTable.css';\r\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\r\nimport Loading from '../../Loading/Loading';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport Event from '@material-ui/icons/Event';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CoinGraph from './CoinGraph/CoinGraph';\r\n\r\nconst BASE_URL = 'https://api.exchangeratesapi.io/';\r\nconst dateBorderClasses = {\r\n    classes: {\r\n        underline: 'date-border-color',\r\n        input: 'date-input-color',\r\n    },\r\n    endAdornment: (\r\n        <InputAdornment position=\"end\">\r\n            <Event className=\"event-color\" />\r\n        </InputAdornment>\r\n    )\r\n}\r\n\r\nconst dateLabelClass = {\r\n    classes: {\r\n        root: 'date-label-color',\r\n    },\r\n}\r\nconst initialObject = {};\r\nconst CoverterTable = () => {\r\n    const [currencyOptions, setCurrencyOptions] = useState([])\r\n    const [latestRate, setLatestRate] = useState({});\r\n    const [yesterdayRate, setYesterdayRate] = useState({});\r\n    const [coinLength, setCoinLength] = useState(\"\");\r\n    const [selectedDate, handleDateChange] = useState(new Date());\r\n    const [openGraph, setOpenGraph] = useState(false);\r\n    const [pickData, setPickData] = useState(\"\");\r\n    const PickDataToGraph = (e, option) => {\r\n        setPickData(option);\r\n        setOpenGraph(true);\r\n        window.scrollTo(0, document.body.scrollHeight + 300);\r\n        //     var elmnt = document.getElementById(\"test\");\r\n        //     elmnt.scrollIntoView();\r\n    }\r\n    useEffect(() => {\r\n        fetch(`${BASE_URL}latest`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                let latestDate = data.date\r\n                let DateOfYesterday = new Date(latestDate);\r\n                const calcMonth = (month) => {\r\n                    if (month >= 10) return month\r\n                    return \"0\" + month\r\n                }\r\n                const allCoins = data.rates;\r\n                allCoins[data.base] = \"\"\r\n                setCoinLength(Object.keys(allCoins).length);\r\n                setCurrencyOptions([data.base, ...Object.keys(data.rates)]);\r\n                Object.keys(allCoins).map(async (options) => {\r\n                    await fetch(`${BASE_URL}latest?symbols=ILS&base=${options}`)\r\n                        .then(response => response.json())\r\n                        .then(data => {\r\n                            const bases = data.base;\r\n                            const tempRate = latestRate;\r\n                            tempRate[bases] = Object.entries(data.rates)[0][1]\r\n                            setLatestRate({ ...latestRate, ...tempRate[bases] })\r\n                        })\r\n                })\r\n                const DateBeforeLates = DateOfYesterday.getFullYear() + \"-\" + calcMonth(DateOfYesterday.getMonth() + 1) + \"-\" + (DateOfYesterday.getDate() - 1);\r\n                Object.keys(allCoins).map(async (options) => {\r\n                    await fetch(`${BASE_URL}${DateBeforeLates}?symbols=ILS&base=${options}`)\r\n                        .then(response => response.json())\r\n                        .then(data => {\r\n                            const bases = data.base;\r\n                            const tempRate = yesterdayRate;\r\n                            tempRate[bases] = Object.entries(data.rates)[0][1]\r\n                            setYesterdayRate({ ...yesterdayRate, ...tempRate[bases] })\r\n                        })\r\n                })\r\n            })\r\n\r\n    }, [])\r\n    const dailyChange = (option) => {\r\n\r\n        let precentege = (option[1] / yesterdayRate[option[0]]) * 100;\r\n        let howFarFromhundred = 100 - precentege;\r\n        let noneDecimel = howFarFromhundred.toString().split(\".\")[0];\r\n        let onlythreedecimel = howFarFromhundred.toString().split(\".\")[1];\r\n        if (onlythreedecimel != undefined) {\r\n\r\n            onlythreedecimel = onlythreedecimel.substring(0, 3);\r\n            if (onlythreedecimel.length === 2)\r\n                onlythreedecimel = onlythreedecimel + \"0\";\r\n            else if (onlythreedecimel.length === 1)\r\n                onlythreedecimel = onlythreedecimel + \"00\";\r\n        } else {\r\n            onlythreedecimel = \"0\";\r\n        }\r\n\r\n        return noneDecimel + \".\" + onlythreedecimel;\r\n\r\n    }\r\n    const clearState = (e) => {\r\n        setYesterdayRate({ ...initialObject });\r\n        setLatestRate({ ...initialObject })\r\n    }\r\n    const classDailyChange = (option) => {\r\n        if (option > 0) return \"positive\";\r\n        else if (option < 0) return \"negative\";\r\n        else return \"same\";\r\n    }\r\n    const handleStuff = (e) => {\r\n        let DateOfYesterday = new Date(selectedDate);\r\n        const calcMonth = (month) => {\r\n            if (month >= 10) return month\r\n            return \"0\" + month;\r\n        }\r\n        const DateBeforeLates = DateOfYesterday.getFullYear() + \"-\" + calcMonth(DateOfYesterday.getMonth() + 1) + \"-\" + (DateOfYesterday.getDate() - 1);\r\n        const DatePicked = DateOfYesterday.getFullYear() + \"-\" + calcMonth(DateOfYesterday.getMonth() + 1) + \"-\" + (DateOfYesterday.getDate());\r\n        clearState();\r\n        currencyOptions\r\n            .filter(currecy => currecy !== \"ILS\")\r\n            .map((option) => {\r\n                fetch(`${BASE_URL}${DatePicked}?symbols=ILS&base=${option}`)\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        const bases = data.base;\r\n                        const tempRate = latestRate;\r\n                        tempRate[bases] = Object.entries(data.rates)[0][1]\r\n                        setLatestRate({ ...latestRate, ...tempRate[bases] })\r\n                    })\r\n                fetch(`${BASE_URL}${DateBeforeLates}?symbols=ILS&base=${option}`)\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        const bases = data.base;\r\n                        const tempRate = yesterdayRate;\r\n                        tempRate[bases] = Object.entries(data.rates)[0][1]\r\n                        setYesterdayRate({ ...yesterdayRate, ...tempRate[bases] })\r\n                    })\r\n            })\r\n\r\n    }\r\n    const isGetToTheSearchLimit = () => {\r\n        if (selectedDate.getFullYear() >= 2011 && selectedDate.getMonth() >= 0 && selectedDate.getDate() > 3)\r\n            return true;\r\n        return false;\r\n    }\r\n    if (coinLength !== Object.keys(yesterdayRate).length ||\r\n        Object.keys(latestRate).length !== coinLength ||\r\n        Object.keys(latestRate).length !== Object.keys(yesterdayRate).length)\r\n        return <Loading />\r\n    return (\r\n        <div className=\"date-table slide-in-bck-center\">\r\n            <div className=\"date\">\r\n\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <DatePicker\r\n                        disableFuture\r\n                        InputLabelProps={dateLabelClass}\r\n\r\n                        InputProps={dateBorderClasses}\r\n                        label=\"Responsive\"\r\n                        views={[\"year\", \"month\", \"date\"]}\r\n                        value={selectedDate}\r\n                        onChange={date => handleDateChange(date)}\r\n                        format=\"dd/MM/yyyy\"\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n                <button className=\"button-class\" disabled={false} onClick={(e) => handleStuff(e)}>\r\n                    <SearchIcon className={\"date-search\"} />\r\n                </button>\r\n            </div>\r\n            {isGetToTheSearchLimit() === false ?\r\n            <div className=\"error-cant-search-limit\">\r\n                <SearchIcon/>\r\n                <div>cant search data earlier then 04/01/2011 </div>\r\n            </div>\r\n             : null \r\n            }\r\n            <div className=\"table\">\r\n                <table className=\"tableCovertor\">\r\n                    <thead className=\"tableHeader\">\r\n                        <tr>\r\n                            <td>\r\n                                type\r\n                        </td>\r\n                            <td>\r\n                                rate\r\n                        </td>\r\n                            <td>\r\n                                daily change\r\n                        </td>\r\n                            <td>\r\n                                graph\r\n                        </td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"tableBody\">\r\n                        {Object.entries(latestRate)\r\n                            .filter(latest => latest[0] !== \"ILS\")\r\n                            .map((option) =>\r\n\r\n\r\n\r\n                                <tr key={option[0]}>\r\n                                    <td className=\"text-color\">{option[0]}</td>\r\n                                    <td className=\"text-color\">{option[1]}</td>\r\n                                    <td className={classDailyChange(dailyChange(option))}>{Math.abs(dailyChange(option)) + \"%\"}</td>\r\n                                    <td><TrendingUpIcon className=\"icon-color\" onClick={(e) => {\r\n                                        PickDataToGraph(e, option[0])\r\n                                    }} /></td>\r\n                                </tr>\r\n\r\n                            )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            {\r\n                openGraph === true ?\r\n                    <CoinGraph\r\n                        openGraph={openGraph}\r\n                        pickData={pickData}\r\n                        closeGraph={(e) => setOpenGraph(false)} />\r\n                    : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default CoverterTable;","import React from 'react';\r\nimport './Converter.css';\r\nimport CoverterAmount from './CoverterAmount/CoverterAmount';\r\nimport CoverterTable from './CoverterTable/CoverterTable';\r\nconst Converter = () => {\r\n    return (\r\n        <div className=\"converter-warrper\">\r\n\r\n            <div className=\"title\">\r\n                <h1 className=\"Converter-Header\">Convert</h1>\r\n            </div>\r\n            <CoverterAmount/>\r\n            <CoverterTable/>\r\n        </div>\r\n    )\r\n}\r\nexport default Converter","import React from 'react';\r\nimport './CovertLink.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CovertLink = () => {\r\n    return (\r\n        <div className=\"convertor\">\r\n            <div className=\"coin-flip\">\r\n                <div className=\"coin-flip-inner\">\r\n                    <div className=\"front-coin\"></div>\r\n                    <div className=\"back-coin\"></div>\r\n                </div>\r\n            </div>\r\n            <div className=\"converter-link-padd\">\r\n                <Link to=\"/Converter\" className=\"converter-link\">\r\n                    Convertor\r\n                </Link>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default CovertLink;","import React from 'react';\r\nimport './PokimonLink.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PokimonLink = () => {\r\n    return (\r\n        <div className=\"poxedex\">\r\n                <div className=\"pokeball\">\r\n                    <div className=\"pokeball__button\"></div>\r\n                </div>\r\n\r\n            <div className=\"converter-link-padd\">\r\n                <Link to=\"/Converter\" className=\"poxedex-link\">\r\n\r\n                    Poxedec\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default PokimonLink;","import React from 'react';\r\nimport './MainPage.css';\r\nimport CovertLink from './CovertLink/CovertLink';\r\nimport PokimonLink from './PokimonLink/PokimonLink';\r\n\r\nconst MainPage = () => {\r\n    return (\r\n        <div className=\"MainPage\">\r\n            <CovertLink/>\r\n            <CovertLink/>\r\n            <CovertLink/>\r\n            <PokimonLink/>\r\n            <CovertLink/>\r\n        </div>\r\n    )\r\n}\r\nexport default MainPage;","import React from 'react';\r\nimport './NotFound.css'\r\nconst NotFound = () => {\r\n    return (\r\n        <div className=\"NotFound\">     \r\n              <div id=\"letter-object\" className=\"text-flicker-in-glow anim-object\" onClick={(e)=> console.log(\"d\")}>404</div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default NotFound;","import React from 'react';\r\nimport Home from '@material-ui/icons/Home';\r\nimport './NavigatorMobile.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NavigatorMobile = () => {\r\n    return (\r\n        <div className=\"NavigatorMobile-warrper\">\r\n            <Link className=\"home-link\" to=\"/\">\r\n                <div className=\"icon-warrper\">\r\n                    <Home className=\"home-link-icon\" />\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\nexport default NavigatorMobile;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './Components/Header/Header';\nimport { Switch, Route } from 'react-router-dom';\nimport Converter from './Components/Converter/Converter';\nimport MainPage from './Components/MainPage/MainPage';\nimport NotFound from './Components/NotFound/NotFound';\nimport NavigatorMobile from './Components/Header/NavigatorMobile/NavigatorMobile';\n\nconst App = () => {\n  const [isMobile,setIsMobile] = useState(false)\n  useEffect(() => {\n    if (navigator.userAgent.match(/Android/i)\n      || navigator.userAgent.match(/webOS/i)\n      || navigator.userAgent.match(/iPhone/i)\n      || navigator.userAgent.match(/iPad/i)\n      || navigator.userAgent.match(/iPod/i)\n      || navigator.userAgent.match(/BlackBerry/i)\n      || navigator.userAgent.match(/Windows Phone/i))\n        setIsMobile(true);\n  }, [])\n  return (\n    <div className=\"app\">\n      <Header />\n      {/* <Route render = {({ location }) => ( */}\n      <Switch >\n        {/* <Switch location = { location }> */}\n        <Route exact path='/' component={MainPage} />\n        <Route exact path='/Converter/' component={Converter} />\n        <Route component={NotFound} />\n      </Switch>\n      {/* )} /> */}\n      {\n        isMobile === true ?\n          <NavigatorMobile/>\n        :null\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter >\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}