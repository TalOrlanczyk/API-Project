{"version":3,"sources":["Components/Header/Title/Title.js","Components/Header/Logo/Logo.js","Components/Header/FunctionsBar/ThemeFunc/ThemeFunc.js","Components/Header/FunctionsBar/FunctionsBar.js","Components/Header/Header.js","Utils/useOutsideClick/useOutsideClick.js","Components/Converter/CurrencyRow/CurrencyRow.js","Components/Loading/Loading.js","Components/Converter/CoverterAmount/CoverterAmount.js","Components/Snackbars/ErrorSnackbar/ErrorSnackbar.js","Components/Converter/CoverterTable/DatePickerCurr/DatePickerCurr.js","Components/Converter/CoverterTable/CoinGraph/CoinGraph.js","Components/Converter/CoverterTable/TableComp/TableHeader/TableHeader.js","Components/Converter/CoverterTable/TableComp/TableBody/TableBody.js","Components/Converter/CoverterTable/TableComp/TableComp.js","Components/Converter/CoverterTable/CoverterTable.js","Components/customHooks/customeHooks.js","Components/Converter/Converter.js","Components/MainPage/CovertLink/CovertLink.js","Components/MainPage/PokimonLink/PokimonLink.js","Components/MainPage/MainPage.js","Components/NotFound/NotFound.js","Components/Header/NavigatorMobile/ThemeFuncMobile/ThemeFuncMobile.js","Components/Header/NavigatorMobile/NavigatorMobile.js","App.js","serviceWorker.js","index.js"],"names":["Title","className","Logo","to","ThemeFunc","useState","theme","setTheme","useEffect","ca","document","cookie","split","element","getElementById","classList","add","onClick","e","date","Date","setDate","getDate","expires","toUTCString","remove","darktheme","lightmode","FunctionsBar","console","log","Header","useOutsideClick","ref","callback","handleClick","current","contains","target","addEventListener","removeEventListener","CurrencyRow","currencyOptions","selectedCurrency","onChangeCurrency","onChangeAmount","amount","compereCurreny","open","setOpen","pickedCoin","wrapperRef","useRef","id","type","name","value","filter","currency","map","option","key","onChange","Loading","BASE_URL","CoverterAmount","toAmount","fromAmount","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","fetch","then","res","json","data","firstCurrency","Object","keys","rates","handleFromAmountChange","useCallback","handleToAmountChange","ErrorSnackbar","text","dateBorderClasses","classes","underline","input","endAdornment","InputAdornment","position","dateLabelClass","root","DatePickerCurr","handleStuff","selectedDate","handleDateChange","isGetToTheSearchLimit","getFullYear","getMonth","utils","DateFnsUtils","DatePicker","disableFuture","InputLabelProps","InputProps","label","views","format","disabled","labels","datasets","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","CoinGraph","latestDate","pickData","openGraph","closeGraph","ChartData","setChartData","close","setClose","scrollIntoView","behavior","month","DateOfYesterday","DateBeforeLates","response","table","Dataset","datas","values","i","length","push","ILS","setTimeout","style","width","height","boxShadow","options","responsive","maintainAspectRatio","title","display","fontSize","legend","fontColor","scales","yAxes","ticks","stepSize","xAxes","TableHeader","TableBody","latestRate","dailyChange","PickDataToGraph","classDailyChange","entries","latest","Math","abs","TableComp","yesterdayRate","setOpenGraph","setPickData","howFarFromhundred","noneDecimel","toString","onlythreedecimel","undefined","substring","initialObject","CoverterTable","setLatestDate","setLatestRate","setYesterdayRate","coinLength","allCoins","base","a","bases","tempRate","calcMonth","DatePicked","currecy","useLatestCurrecny","setCurrencyOptions","Converter","CovertLink","PokimonLink","MainPage","NotFound","props","history","goBack","ThemeFuncMobile","NavigatorMobile","App","isMobile","setIsMobile","navigator","userAgent","match","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b4cfe97f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Title.css';\r\n\r\nconst Title = () => {\r\n    return (\r\n        <div className=\"Title\">\r\n            <span className=\"Span-color\">myApiProject </span>\r\n        </div>\r\n    )\r\n}\r\nexport default Title;","import React from 'react';\r\nimport './Logo.css';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Logo = () => {\r\n    \r\n    return (\r\n        <div className=\"Logo\">\r\n            <Link to=\"/\">\r\n                header\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\nexport default Logo;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './ThemeFunc.css';\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\r\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\r\n\r\nconst ThemeFunc = () => {\r\n    const [theme, setTheme] = useState(\"\");\r\n    useEffect(()=> {\r\n        var ca = document.cookie.split(';');\r\n        ca = ca[0].split('=');\r\n        const element = document.getElementById(\"API\");\r\n        if (ca[0] === \"theme\") {\r\n\r\n            element.classList.add(ca[1]);\r\n            setTheme(ca[1])\r\n        } else {\r\n            element.classList.add(\"lightmode\");\r\n            setTheme(\"lightmode\")\r\n        }\r\n\r\n      },[])\r\n    const darktheme = (e) => {\r\n        let date = new Date();\r\n        date.setDate(date.getDate() + 1);\r\n        let expires = \"; expires=\" + date.toUTCString();\r\n        document.cookie = \"theme=darkmode\" + expires + \";\";\r\n        const element = document.getElementById(\"API\");\r\n        element.classList.add(\"darkmode\");\r\n        element.classList.remove(\"lightmode\");\r\n        setTheme(\"darkmode\");\r\n    }\r\n    const lightmode = (e) => {\r\n        const element = document.getElementById(\"API\");\r\n        let date = new Date();\r\n        date.setDate(date.getDate() + 1);\r\n        let expires = \"; expires=\" + date.toUTCString();\r\n        document.cookie = \"theme=lightmode\" + expires + \";\";\r\n        element.classList.add(\"lightmode\");\r\n        element.classList.remove(\"darkmode\");\r\n        setTheme(\"lightmode\");\r\n    }\r\n    return (\r\n        <div className=\"ThemeFunc-flex\">\r\n            {theme === \"lightmode\" ?\r\n                <button className=\"fab-class\" onClick={(e) => darktheme(e)}>\r\n                    <span className=\"middle\">\r\n                        < Brightness4Icon className=\"ThemeFunc-icon\" />\r\n                    </span>\r\n                </button>\r\n                :\r\n                <button className=\"fab-class\" onClick={(e) => lightmode(e)}>\r\n                    <span className=\"middle\">\r\n                        < Brightness7Icon className=\"ThemeFunc-icon\" />\r\n                    </span>\r\n                </button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default ThemeFunc;","import React from 'react';\r\nimport './FunctionsBar.css';\r\nimport ThemeFunc from './ThemeFunc/ThemeFunc';\r\n\r\n\r\nconst FunctionsBar = () => {\r\n    console.log(\"func\")\r\n    return (\r\n        <div className=\"funcBar-grid\">\r\n            <ThemeFunc/>\r\n        </div>\r\n    )\r\n}\r\nexport default FunctionsBar;","import React from 'react';\r\nimport './Header.css'\r\nimport Title from './Title/Title.js';\r\nimport Logo from './Logo/Logo';\r\nimport FunctionsBar from './FunctionsBar/FunctionsBar';\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"Header-grid\">  \r\n            <Logo/>\r\n            <Title/>\r\n            <FunctionsBar/>\r\n        </div>\r\n    )\r\n}\r\nexport default Header;","import { useEffect } from \"react\";\r\n\r\nconst useOutsideClick = (ref, callback) => {\r\n  const handleClick = e => {\r\n    if (ref.current && !ref.current.contains(e.target)) {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClick);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClick);\r\n    };\r\n  });\r\n};\r\n\r\nexport default useOutsideClick;","import 'date-fns';\r\nimport React, { useState, useRef } from 'react';\r\nimport './CurrencyRow.css';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport useOutsideClick from '../../../Utils/useOutsideClick/useOutsideClick';\r\n\r\nconst CurrencyRow = ({ currencyOptions, selectedCurrency, onChangeCurrency, onChangeAmount, amount, compereCurreny }) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [pickedCoin] = useState(\"\");\r\n    const wrapperRef = useRef(null);\r\n\r\n    useOutsideClick(wrapperRef, () => {\r\n        if (open === true)\r\n            setOpen(false)\r\n    });\r\n    return (\r\n        <div className=\"Currecy\">\r\n            <div className={open === true ? \"color-picker open\" : \"color-picker\"} onClick={(e) => {\r\n                setOpen(!open)\r\n            }} >\r\n                <input id=\"color-input\" type=\"hidden\" name=\"coloris_panneau\" value={pickedCoin} />\r\n                <div className=\"color-value list-item\">{selectedCurrency}<ArrowDownwardIcon className={open === true ? \"arrowdown upside\" : \"arrowdown\"} /></div>\r\n                <ul className=\"list\" ref={open === true ? wrapperRef : null} >\r\n                    {currencyOptions\r\n                        .filter(currency => currency !== compereCurreny)\r\n                        .map((option) =>\r\n                            <li key={option} className={selectedCurrency === option ? \"list-item picked\" : \"list-item\"} onClick={(e) => onChangeCurrency(option)}>\r\n                                <span>{option}</span>\r\n                            </li>\r\n                        )\r\n                    }\r\n                </ul>\r\n            </div>\r\n            <input type=\"number\" className=\"money-conver\" value={amount} onChange={onChangeAmount} />\r\n        </div>\r\n    )\r\n}\r\nexport default CurrencyRow;","import React from 'react';\r\nimport './Loading.css';\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"circle\"></div>\r\n            <div className=\"circle\"></div>\r\n            <div className=\"circle\"></div>\r\n            <div className=\"shadow\"></div>\r\n            <div className=\"shadow\"></div>\r\n            <div className=\"shadow\"></div>\r\n            <span>Loading</span>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Loading;","import React, { useState, useEffect, useCallback } from 'react';\r\nimport './CoverterAmount.css';\r\nimport CurrencyRow from '../CurrencyRow/CurrencyRow';\r\nimport Loading from '../../Loading/Loading'\r\nconst BASE_URL = 'https://api.exchangeratesapi.io/latest';\r\nconst CoverterAmount = ({ currencyOptions }) => {\r\n    const [fromCurrency, setFromCurrency] = useState(currencyOptions[0])\r\n    const [toCurrency, setToCurrency] = useState(currencyOptions[1])\r\n    const [exchangeRate, setExchangeRate] = useState()\r\n    const [amount, setAmount] = useState(1)\r\n    const [amountInFromCurrency, setAmountInFromCurrency] = useState(true)\r\n\r\n    let toAmount, fromAmount\r\n    if (amountInFromCurrency) {\r\n        fromAmount = amount\r\n        toAmount = amount * exchangeRate\r\n    } else {\r\n        toAmount = amount\r\n        fromAmount = amount / exchangeRate\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(BASE_URL)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                let firstCurrency = Object.keys(data.rates)[0]\r\n                // setFromCurrency(data.base)\r\n                // setToCurrency(firstCurrency)\r\n                setExchangeRate(data.rates[firstCurrency])\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (fromCurrency != null && toCurrency != null) {\r\n            fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\r\n                .then(res => res.json())\r\n                .then(data => setExchangeRate(data.rates[toCurrency]))\r\n        }\r\n    }, [fromCurrency, toCurrency])\r\n\r\n\r\n    const handleFromAmountChange = useCallback((e) => {\r\n        setAmount(e.target.value)\r\n        setAmountInFromCurrency(true)\r\n    }, [])\r\n\r\n    const handleToAmountChange = useCallback((e) => {\r\n        setAmount(e.target.value)\r\n        setAmountInFromCurrency(false)\r\n    }, [])\r\n    //slide-in-bck-center\r\n    if (fromCurrency == null || toCurrency == null || currencyOptions == null || fromAmount == null || exchangeRate == null)\r\n        return <Loading />\r\n    return (\r\n            <div className=\"coverter-main\">\r\n                <CurrencyRow\r\n                    currencyOptions={currencyOptions}\r\n                    selectedCurrency={fromCurrency}\r\n                    onChangeCurrency={(e) => setFromCurrency(e)}\r\n                    onChangeAmount={(e) => handleFromAmountChange(e)}\r\n                    amount={fromAmount}\r\n                    compereCurreny={toCurrency}\r\n                />\r\n                <div className=\"equals\">=</div>\r\n                <CurrencyRow\r\n                    currencyOptions={currencyOptions}\r\n                    selectedCurrency={toCurrency}\r\n                    onChangeCurrency={(e) => setToCurrency(e)}\r\n                    onChangeAmount={(e) => handleToAmountChange(e)}\r\n                    amount={toAmount}\r\n                    compereCurreny={fromCurrency}\r\n                />\r\n            </div>\r\n           \r\n    )\r\n}\r\nexport default CoverterAmount;","import React from 'react';\r\nimport './ErrorSnackbar.css';\r\nimport ErrorOutline from '@material-ui/icons/ErrorOutline';\r\n\r\nconst ErrorSnackbar = ({ text }) => {\r\n    return (\r\n        <div className=\"error-cant-search-limit\">\r\n            <ErrorOutline />\r\n            <div className=\"error-text\">{text}</div>\r\n        </div>\r\n    )\r\n}\r\nexport default ErrorSnackbar;","import React, { useState } from 'react';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport Search from '@material-ui/icons/Search';\r\nimport ErrorSnackbar from '../../../Snackbars/ErrorSnackbar/ErrorSnackbar';\r\nimport Event from '@material-ui/icons/Event';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport './DatePickerCurr.css';\r\n\r\n\r\nconst dateBorderClasses = {\r\n    classes: {\r\n        underline: 'date-border-color',\r\n        input: 'date-input-color',\r\n    },\r\n    endAdornment: (\r\n        <InputAdornment position=\"end\">\r\n            <Event className=\"event-color\" />\r\n        </InputAdornment>\r\n    )\r\n}\r\n\r\nconst dateLabelClass = {\r\n    classes: {\r\n        root: 'date-label-color',\r\n    },\r\n}\r\nconst DatePickerCurr = ({handleStuff}) => {\r\n    const [selectedDate, handleDateChange] = useState(new Date());\r\n    const isGetToTheSearchLimit = () => {\r\n        if (selectedDate.getFullYear() >= 2011 && selectedDate.getMonth() >= 0 && selectedDate.getDate() > 3)\r\n            return true;\r\n        return false;\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"date\">\r\n\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <DatePicker\r\n                        disableFuture\r\n                        InputLabelProps={dateLabelClass}\r\n\r\n                        InputProps={dateBorderClasses}\r\n                        label=\"Responsive\"\r\n                        views={[\"year\", \"month\", \"date\"]}\r\n                        value={selectedDate}\r\n                        onChange={date => handleDateChange(date)}\r\n                        format=\"dd/MM/yyyy\"\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n                <button className=\"button-class\" disabled={!isGetToTheSearchLimit()} onClick={(e) => handleStuff(e,selectedDate)}>\r\n                    <Search className={isGetToTheSearchLimit() === false ? \"disabled\" : \"date-search\"} />\r\n                </button>\r\n            </div>\r\n            {isGetToTheSearchLimit() === false ?\r\n                <ErrorSnackbar\r\n                    text={\"cant search data earlier then 04/01/2011\"} />\r\n                : null\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default DatePickerCurr;","import React, { useEffect, useState } from 'react';\r\nimport Close from '@material-ui/icons/Close';\r\nimport './CoinGraph.css';\r\nimport { Bar, Line } from 'react-chartjs-2';\r\nconst BASE_URL = 'https://api.exchangeratesapi.io/';\r\nconst data = {\r\n    labels: \"\",\r\n    datasets: [\r\n        {\r\n            label: \"ערך המטבע\",\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: \"rgba(75,192,192,0.4)\",\r\n            borderColor: \"rgba(75,192,192,1)\",\r\n            borderCapStyle: \"butt\",\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: \"miter\",\r\n            pointBorderColor: \"#007c9a\",\r\n            pointBackgroundColor: \"#fff\",\r\n            pointBorderWidth: 3,\r\n            pointHoverRadius: 6,\r\n            pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n            pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n            pointHoverBorderWidth: 3,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: \"\"\r\n        }\r\n    ]\r\n};\r\n\r\nconst CoinGraph = ({ latestDate, openGraph, pickData, closeGraph }) => {\r\n    const [ChartData, setChartData] = useState(data)\r\n    const [close, setClose] = useState(false);\r\n    const calcMonth = (month) => {\r\n        if (month >= 10) return month\r\n        return \"0\" + month;\r\n    }\r\n    useEffect(() => {\r\n        var element = document.getElementById(\"test\");\r\n\r\n        element.scrollIntoView({ behavior: 'smooth' });\r\n    }, []);\r\n    useEffect(() => {\r\n        let DateOfYesterday = new Date(latestDate);\r\n        let DateBeforeLates = DateOfYesterday.getFullYear() + \"-\" + calcMonth(DateOfYesterday.getMonth() + 1) + \"-\" + (DateOfYesterday.getDate() - 7);\r\n        fetch(`${BASE_URL}history?start_at=${DateBeforeLates}&end_at=${latestDate}&symbols=ILS&base=${pickData}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.table(data);\r\n                let Dataset = [...ChartData.datasets][0];\r\n                let datas = [];\r\n                Dataset.data = Object.values(data.rates);\r\n                for (let i = 0; i < Object.values(data.rates).length; i++) {\r\n                    datas.push(Object.values(data.rates)[i].ILS);\r\n                }\r\n                Dataset.data = datas;\r\n                setChartData({ ...ChartData, datasets: [Dataset] })\r\n                setChartData({ ...ChartData, labels: Object.keys(data.rates) })\r\n            })\r\n    }, [pickData]);\r\n\r\n    const closeGraphCard = (e) => {\r\n        setClose(true);\r\n        setTimeout(() => {\r\n            closeGraph();\r\n        }, 1000)\r\n    }\r\n    return (\r\n\r\n        <div className=\"coinGraph-container\">\r\n            <div id=\"test\" className={close === false ? \"scale-in-center\" : \"roll-out-left\"}>{pickData}\r\n                <button className=\"left-exit\" onClick={(e) => closeGraphCard(e)}>\r\n                    <Close />\r\n                </button>\r\n                {ChartData.labels.length > 0 ?\r\n                    <div className=\"chartline\" style={{width:\"80vw\",height:\"40vh\",boxShadow: \"0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14)\"}}>\r\n\r\n                        <Line\r\n                            data={ChartData}\r\n                            options={{\r\n                                responsive: true,\r\n                                maintainAspectRatio: false,\r\n                                title: {\r\n                                    display: true,\r\n                                    text: `${pickData} ערך המטבע `,\r\n                                    fontSize: 10\r\n                                },\r\n                                legend: {\r\n                                    display: true,\r\n                                    position: 'top',\r\n                                    labels: {\r\n                                        fontSize: 17,\r\n                                        fontColor: \"black\"\r\n                                    }\r\n                                },\r\n                                scales: {\r\n                                    yAxes: [{\r\n                                        ticks: {\r\n                                            fontColor: \"black\",\r\n                                            fontSize: 14,\r\n                                            stepSize: 0.5,\r\n                                            // beginAtZero: true\r\n                                        }\r\n                                    }],\r\n                                    xAxes: [{\r\n                                        ticks: {\r\n                                            fontColor: \"black\",\r\n                                            fontSize: 14,\r\n                                            stepSize: 1,\r\n                                            // beginAtZero: true\r\n                                        }\r\n                                    }]\r\n                                }\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    : null}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default CoinGraph","import React from 'react';\r\nimport './TableHeader.css';\r\n\r\nconst TableHeader = () => {\r\n    return (\r\n        <thead className=\"tableHeader\">\r\n            <tr>\r\n                <td>\r\n                    type\r\n            </td>\r\n                <td>\r\n                    rate\r\n            </td>\r\n                <td>\r\n                    daily change\r\n            </td>\r\n                <td>\r\n                    graph\r\n            </td>\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\nexport default TableHeader;","import React from 'react';\r\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\r\nimport './TableBody.css';\r\n\r\nconst TableBody = ({ latestRate, dailyChange,PickDataToGraph }) => {\r\n    const classDailyChange = (option) => {\r\n        if (option > 0) return \"positive\";\r\n        else if (option < 0) return \"negative\";\r\n        else return \"same\";\r\n    }\r\n    return (\r\n        <tbody className=\"tableBody\">\r\n            {Object.entries(latestRate)\r\n                .filter(latest => latest[0] !== \"ILS\")\r\n                .map((option) =>\r\n\r\n\r\n\r\n                    <tr key={option[0]}>\r\n                        <td className=\"text-color\">{option[0]}</td>\r\n                        <td className=\"text-color\">{option[1]}</td>\r\n                        <td className={classDailyChange(dailyChange(option))}>{Math.abs(dailyChange(option)) + \"%\"}</td>\r\n                        <td><TrendingUpIcon className=\"icon-color\" onClick={(e) => {\r\n                            PickDataToGraph(e, option[0])\r\n                        }} /></td>\r\n                    </tr>\r\n\r\n                )}\r\n        </tbody>\r\n    )\r\n}\r\nexport default TableBody;","import React, { useState } from 'react';\r\nimport './TableComp.css';\r\nimport CoinGraph from '../CoinGraph/CoinGraph';\r\nimport TableHeader from './TableHeader/TableHeader';\r\nimport TableBody from './TableBody/TableBody';\r\n\r\nconst TableComp = ({ latestRate, yesterdayRate,latestDate }) => {\r\n    const [openGraph, setOpenGraph] = useState(false);\r\n    const [pickData, setPickData] = useState(\"\");\r\n    const PickDataToGraph = (e, option) => {\r\n        setPickData(option);\r\n        setOpenGraph(true);\r\n        // window.scrollTo(0, document.body.scrollHeight + 300);\r\n    }\r\n    const dailyChange = (option) => {\r\n\r\n        let precentege = (option[1] / yesterdayRate[option[0]]) * 100;\r\n        let howFarFromhundred = 100 - precentege;\r\n        let noneDecimel = howFarFromhundred.toString().split(\".\")[0];\r\n        let onlythreedecimel = howFarFromhundred.toString().split(\".\")[1];\r\n        if (onlythreedecimel != undefined) {\r\n\r\n            onlythreedecimel = onlythreedecimel.substring(0, 3);\r\n            if (onlythreedecimel.length === 2)\r\n                onlythreedecimel = onlythreedecimel + \"0\";\r\n            else if (onlythreedecimel.length === 1)\r\n                onlythreedecimel = onlythreedecimel + \"00\";\r\n        } else {\r\n            onlythreedecimel = \"0\";\r\n        }\r\n\r\n        return noneDecimel + \".\" + onlythreedecimel;\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"table\">\r\n                <table className=\"tableCovertor\">\r\n                    <TableHeader />\r\n                    <TableBody \r\n                        latestRate={latestRate} \r\n                        dailyChange={(option)=>dailyChange(option)}  \r\n                        PickDataToGraph={(e,option) => PickDataToGraph(e,option)}/>\r\n                </table>\r\n            </div>\r\n            {\r\n                openGraph === true ?\r\n                    <CoinGraph\r\n                        latestDate={latestDate}\r\n                        openGraph={openGraph}\r\n                        pickData={pickData}\r\n                        closeGraph={(e) => setOpenGraph(false)} />\r\n                    : null\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default TableComp;","import React, { useEffect, useState } from 'react';\r\nimport './CoverterTable.css';\r\nimport Loading from '../../Loading/Loading';\r\nimport DatePickerCurr from './DatePickerCurr/DatePickerCurr';\r\nimport TableComp from './TableComp/TableComp';\r\n\r\nconst BASE_URL = 'https://api.exchangeratesapi.io/';\r\n\r\nconst initialObject = {};\r\nconst CoverterTable = ({ currencyOptions }) => {\r\n    const [latestDate, setLatestDate] = useState(\"\")\r\n    const [latestRate, setLatestRate] = useState({});\r\n    const [yesterdayRate, setYesterdayRate] = useState({});\r\n    const [coinLength] = useState(currencyOptions.length);\r\n    useEffect(() => {\r\n        fetch(`${BASE_URL}latest`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                let latestDate = data.date\r\n                let DateOfYesterday = new Date(latestDate);\r\n                const calcMonth = (month) => {\r\n                    if (month >= 10) return month\r\n                    return \"0\" + month\r\n                }\r\n                const allCoins = data.rates;\r\n                allCoins[data.base] = \"\"\r\n                setLatestDate(data.date);\r\n                Object.keys(allCoins).map(async (options) => {\r\n                    await fetch(`${BASE_URL}latest?symbols=ILS&base=${options}`)\r\n                        .then(response => response.json())\r\n                        .then(data => {\r\n                            const bases = data.base;\r\n                            const tempRate = latestRate;\r\n                            tempRate[bases] = Object.entries(data.rates)[0][1]\r\n                            setLatestRate({ ...latestRate, ...tempRate[bases] })\r\n                        })\r\n                })\r\n                const DateBeforeLates = DateOfYesterday.getFullYear() + \"-\" + calcMonth(DateOfYesterday.getMonth() + 1) + \"-\" + (DateOfYesterday.getDate() - 1);\r\n                Object.keys(allCoins).map(async (options) => {\r\n                    await fetch(`${BASE_URL}${DateBeforeLates}?symbols=ILS&base=${options}`)\r\n                        .then(response => response.json())\r\n                        .then(data => {\r\n                            const bases = data.base;\r\n                            const tempRate = yesterdayRate;\r\n                            tempRate[bases] = Object.entries(data.rates)[0][1]\r\n                            setYesterdayRate({ ...yesterdayRate, ...tempRate[bases] })\r\n                        })\r\n                })\r\n            })\r\n\r\n    }, [])\r\n    const clearState = (e) => {\r\n        setYesterdayRate({ ...initialObject });\r\n        setLatestRate({ ...initialObject })\r\n    }\r\n    const handleStuff = (e, selectedDate) => {\r\n        let DateOfYesterday = new Date(selectedDate);\r\n        const calcMonth = (month) => {\r\n            if (month >= 10) return month\r\n            return \"0\" + month;\r\n        }\r\n        const DateBeforeLates = DateOfYesterday.getFullYear() + \"-\" + calcMonth(DateOfYesterday.getMonth() + 1) + \"-\" + (DateOfYesterday.getDate() - 1);\r\n        const DatePicked = DateOfYesterday.getFullYear() + \"-\" + calcMonth(DateOfYesterday.getMonth() + 1) + \"-\" + (DateOfYesterday.getDate());\r\n        clearState();\r\n        currencyOptions\r\n            .filter(currecy => currecy !== \"ILS\")\r\n            .map((option) => {\r\n                fetch(`${BASE_URL}${DatePicked}?symbols=ILS&base=${option}`)\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        const bases = data.base;\r\n                        const tempRate = latestRate;\r\n                        tempRate[bases] = Object.entries(data.rates)[0][1]\r\n                        setLatestRate({ ...latestRate, ...tempRate[bases] })\r\n                    })\r\n                fetch(`${BASE_URL}${DateBeforeLates}?symbols=ILS&base=${option}`)\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        const bases = data.base;\r\n                        const tempRate = yesterdayRate;\r\n                        tempRate[bases] = Object.entries(data.rates)[0][1]\r\n                        setYesterdayRate({ ...yesterdayRate, ...tempRate[bases] })\r\n                    })\r\n            })\r\n\r\n    }\r\n    if (coinLength !== Object.keys(yesterdayRate).length ||\r\n        Object.keys(latestRate).length !== coinLength)\r\n        return <Loading />\r\n    return (\r\n        <div className=\"date-table slide-in-bck-center-table\">\r\n            <DatePickerCurr handleStuff={(e, selectedDate) => handleStuff(e, selectedDate)} />\r\n            <TableComp latestRate={latestRate} yesterdayRate={yesterdayRate} latestDate={latestDate} />\r\n        </div>\r\n    )\r\n}\r\nexport default CoverterTable;","import { useState, useEffect } from 'react';\r\nconst BASE_URL = 'https://api.exchangeratesapi.io/latest';\r\nconst useLatestCurrecny = () => {\r\n    const [currencyOptions, setCurrencyOptions] = useState([]);\r\n    const [fromCurrency, setFromCurrency] = useState();\r\n    const [toCurrency, setToCurrency] = useState();\r\n    const [exchangeRate, setExchangeRate] = useState()\r\n\r\n    useEffect(()=> {\r\n        fetch(BASE_URL)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                const firstCurrency = Object.keys(data.rates)[0]\r\n                // setFromCurrency(data.base)\r\n                // setToCurrency(firstCurrency)\r\n                // setExchangeRate(data.rates[firstCurrency])\r\n                setCurrencyOptions([data.base, ...Object.keys(data.rates)])\r\n            })\r\n    },[])\r\n    return [currencyOptions];\r\n}\r\nexport default useLatestCurrecny;","import React from 'react';\r\nimport './Converter.css';\r\nimport CoverterAmount from './CoverterAmount/CoverterAmount';\r\nimport CoverterTable from './CoverterTable/CoverterTable';\r\nimport useLatestCurrecny from '../customHooks/customeHooks';\r\nimport Loading from '../Loading/Loading';\r\nconst Converter = () => {\r\n    const [currencyOptions] = useLatestCurrecny();\r\n    const [exchangeRate] = useLatestCurrecny(\"exchangeRate\");\r\n    if (currencyOptions.length === 0)\r\n        return <Loading />\r\n    return (\r\n        <div className=\"converter-warrper\">\r\n\r\n            <div className=\"title\">\r\n                <h1 className=\"Converter-Header\">Convert</h1>\r\n            </div>\r\n            <CoverterAmount currencyOptions={currencyOptions} />\r\n            <CoverterTable \r\n                currencyOptions={currencyOptions} />\r\n        </div>\r\n    )\r\n}\r\nexport default Converter","import React from 'react';\r\nimport './CovertLink.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CovertLink = () => {\r\n    return (\r\n        <div className=\"convertor\">\r\n            <div className=\"coin-flip\">\r\n                <div className=\"coin-flip-inner\">\r\n                    <div className=\"front-coin\"></div>\r\n                    <div className=\"back-coin\"></div>\r\n                </div>\r\n            </div>\r\n            <div className=\"converter-link-padd\">\r\n                <Link to=\"/Converter\" className=\"converter-link\">\r\n                    Convertor\r\n                </Link>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default CovertLink;","import React from 'react';\r\nimport './PokimonLink.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PokimonLink = () => {\r\n    return (\r\n        <div className=\"poxedex\">\r\n                <div className=\"pokeball\">\r\n                    <div className=\"pokeball__button\"></div>\r\n                </div>\r\n\r\n            <div className=\"converter-link-padd\">\r\n                <Link to=\"/poke\" className=\"poxedex-link\">\r\n\r\n                    Poxedec\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default PokimonLink;","import React from 'react';\r\nimport './MainPage.css';\r\nimport CovertLink from './CovertLink/CovertLink';\r\nimport PokimonLink from './PokimonLink/PokimonLink';\r\n\r\nconst MainPage = () => {\r\n    return (\r\n        <div className=\"MainPage\">\r\n            <CovertLink/>\r\n            <CovertLink/>\r\n            <CovertLink/>\r\n            <PokimonLink/>\r\n            <CovertLink/>\r\n        </div>\r\n    )\r\n}\r\nexport default MainPage;","import React from 'react';\r\nimport './NotFound.css'\r\nimport { Link } from 'react-router-dom';\r\nconst NotFound = (props) => {\r\n    return (\r\n        <div className=\"NotFound\">     \r\n              <div id=\"letter-object\" className=\"text-flicker-in-glow anim-object\" onClick={(e)=> console.log(\"d\")}>404</div>\r\n              <button onClick={(e)=> props.history.goBack()}>Back toprevious page</button>\r\n              <Link to=\"/\">Back to Home</Link>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default NotFound;","import React, { useState, useEffect } from 'react';\r\nimport './ThemeFuncMobile.css';\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\r\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\r\n\r\nconst ThemeFuncMobile = () => {\r\n    const [theme, setTheme] = useState(\"\");\r\n    useEffect(()=> {\r\n        var ca = document.cookie.split(';');\r\n        ca = ca[0].split('=');\r\n        const element = document.getElementById(\"API\");\r\n        if (ca[0] === \"theme\") {\r\n\r\n            element.classList.add(ca[1]);\r\n            setTheme(ca[1])\r\n        } else {\r\n            element.classList.add(\"lightmode\");\r\n            setTheme(\"lightmode\")\r\n        }\r\n\r\n      },[])\r\n    const darktheme = (e) => {\r\n        let date = new Date();\r\n        date.setDate(date.getDate() + 1);\r\n        let expires = \"; expires=\" + date.toUTCString();\r\n        document.cookie = \"theme=darkmode\" + expires + \";\";\r\n        const element = document.getElementById(\"API\");\r\n        element.classList.add(\"darkmode\");\r\n        element.classList.remove(\"lightmode\");\r\n        setTheme(\"darkmode\");\r\n    }\r\n    const lightmode = (e) => {\r\n        const element = document.getElementById(\"API\");\r\n        let date = new Date();\r\n        date.setDate(date.getDate() + 1);\r\n        let expires = \"; expires=\" + date.toUTCString();\r\n        document.cookie = \"theme=lightmode\" + expires + \";\";\r\n        element.classList.add(\"lightmode\");\r\n        element.classList.remove(\"darkmode\");\r\n        setTheme(\"lightmode\");\r\n    }\r\n    return (\r\n        <div className=\"ThemeFunc-flex\">\r\n            {theme === \"lightmode\" ?\r\n                \r\n                    <span className=\"middle\">\r\n                        < Brightness4Icon className=\"ThemeFunc-icon\" onClick={(e) => darktheme(e)}/>\r\n                    </span>\r\n                \r\n                :\r\n             \r\n                    <span className=\"middle\">\r\n                        < Brightness7Icon className=\"ThemeFunc-icon\" onClick={(e) => lightmode(e)}/>\r\n                    </span>\r\n                \r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default ThemeFuncMobile;","import React from 'react';\r\nimport Home from '@material-ui/icons/Home';\r\nimport './NavigatorMobile.css';\r\nimport { Link } from 'react-router-dom';\r\nimport ThemeFunc from '../FunctionsBar/ThemeFunc/ThemeFunc';\r\nimport ThemeFuncMobile from './ThemeFuncMobile/ThemeFuncMobile';\r\n\r\nconst NavigatorMobile = () => {\r\n    return (\r\n        <div className=\"NavigatorMobile-warrper\">\r\n            <Link className=\"home-link\" to=\"/\">\r\n                <div className=\"icon-warrper\">\r\n                    <Home className=\"home-link-icon\" />\r\n                </div>\r\n            </Link>\r\n            <ThemeFuncMobile />\r\n        </div>\r\n    )\r\n}\r\nexport default NavigatorMobile;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './Components/Header/Header';\nimport { Switch, Route } from 'react-router-dom';\nimport Converter from './Components/Converter/Converter';\nimport MainPage from './Components/MainPage/MainPage';\nimport NotFound from './Components/NotFound/NotFound';\nimport NavigatorMobile from './Components/Header/NavigatorMobile/NavigatorMobile';\n\nconst App = () => {\n  const [isMobile,setIsMobile] = useState(false)\n  useEffect(() => {\n    if (navigator.userAgent.match(/Android/i)\n      || navigator.userAgent.match(/webOS/i)\n      || navigator.userAgent.match(/iPhone/i)\n      || navigator.userAgent.match(/iPad/i)\n      || navigator.userAgent.match(/iPod/i)\n      || navigator.userAgent.match(/BlackBerry/i)\n      || navigator.userAgent.match(/Windows Phone/i))\n        setIsMobile(true);\n  }, [])\n  return (\n    <div className=\"app\">\n      <Header />\n      {/* <Route render = {({ location }) => ( */}\n      <Switch >\n        {/* <Switch location = { location }> */}\n        <Route exact path='/' component={MainPage} />\n        <Route exact path='/Converter/' component={Converter} />\n        <Route component={NotFound} />\n      </Switch>\n      {/* )} /> */}\n      {\n        isMobile === true ?\n          <NavigatorMobile/>\n        :null\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter >\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}